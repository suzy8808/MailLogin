<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.bobo.silence.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="org.bobo.silence.bean.Comment" >
    <id column="comment_id" property="commentId" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="comment_type" property="commentType" jdbcType="INTEGER" />
    <result column="reply_id" property="replyId" jdbcType="VARCHAR" />
    <result column="from_uid" property="fromUid" jdbcType="VARCHAR" />
    <result column="to_uid" property="toUid" jdbcType="VARCHAR" />
    <result column="like" property="like" jdbcType="INTEGER" />
    <result column="dislike" property="dislike" jdbcType="INTEGER" />
    <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER" />
    <result column="report" property="report" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    comment_id, content, comment_type, reply_id, from_uid, to_uid, like, dislike, delete_flag, 
    report, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from comment
    where comment_id = #{commentId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.bobo.silence.bean.Comment" >
    insert into comment (comment_id, content, comment_type, 
      reply_id, from_uid, to_uid, 
      like, dislike, delete_flag, 
      report, create_time, update_time
      )
    values (#{commentId,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{commentType,jdbcType=INTEGER}, 
      #{replyId,jdbcType=VARCHAR}, #{fromUid,jdbcType=VARCHAR}, #{toUid,jdbcType=VARCHAR}, 
      #{like,jdbcType=INTEGER}, #{dislike,jdbcType=INTEGER}, #{deleteFlag,jdbcType=INTEGER}, 
      #{report,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.bobo.silence.bean.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="commentType != null" >
        comment_type,
      </if>
      <if test="replyId != null" >
        reply_id,
      </if>
      <if test="fromUid != null" >
        from_uid,
      </if>
      <if test="toUid != null" >
        to_uid,
      </if>
      <if test="like != null" >
        like,
      </if>
      <if test="dislike != null" >
        dislike,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="report != null" >
        report,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="commentType != null" >
        #{commentType,jdbcType=INTEGER},
      </if>
      <if test="replyId != null" >
        #{replyId,jdbcType=VARCHAR},
      </if>
      <if test="fromUid != null" >
        #{fromUid,jdbcType=VARCHAR},
      </if>
      <if test="toUid != null" >
        #{toUid,jdbcType=VARCHAR},
      </if>
      <if test="like != null" >
        #{like,jdbcType=INTEGER},
      </if>
      <if test="dislike != null" >
        #{dislike,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="report != null" >
        #{report,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.bobo.silence.bean.Comment" >
    update comment
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="commentType != null" >
        comment_type = #{commentType,jdbcType=INTEGER},
      </if>
      <if test="replyId != null" >
        reply_id = #{replyId,jdbcType=VARCHAR},
      </if>
      <if test="fromUid != null" >
        from_uid = #{fromUid,jdbcType=VARCHAR},
      </if>
      <if test="toUid != null" >
        to_uid = #{toUid,jdbcType=VARCHAR},
      </if>
      <if test="like != null" >
        like = #{like,jdbcType=INTEGER},
      </if>
      <if test="dislike != null" >
        dislike = #{dislike,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="report != null" >
        report = #{report,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.bobo.silence.bean.Comment" >
    update comment
    set content = #{content,jdbcType=VARCHAR},
      comment_type = #{commentType,jdbcType=INTEGER},
      reply_id = #{replyId,jdbcType=VARCHAR},
      from_uid = #{fromUid,jdbcType=VARCHAR},
      to_uid = #{toUid,jdbcType=VARCHAR},
      like = #{like,jdbcType=INTEGER},
      dislike = #{dislike,jdbcType=INTEGER},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      report = #{report,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where comment_id = #{commentId,jdbcType=VARCHAR}
  </update>
</mapper>