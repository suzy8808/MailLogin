<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.bobo.silence.mapper.EventMapper" >
  <resultMap id="BaseResultMap" type="org.bobo.silence.bean.Event" >
    <id column="event_id" property="eventId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="event_type" property="eventType" jdbcType="INTEGER" />
    <result column="work_id" property="workId" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="org.bobo.silence.bean.Event" extends="BaseResultMap" >
    <result column="forward_content" property="forwardContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    event_id, user_id, event_type, work_id, state, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    forward_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from event
    where event_id = #{eventId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from event
    where event_id = #{eventId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.bobo.silence.bean.Event" >
    insert into event (event_id, user_id, event_type, 
      work_id, state, create_time, 
      update_time, forward_content)
    values (#{eventId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{eventType,jdbcType=INTEGER}, 
      #{workId,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{forwardContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.bobo.silence.bean.Event" >
    insert into event
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eventId != null" >
        event_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="eventType != null" >
        event_type,
      </if>
      <if test="workId != null" >
        work_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="forwardContent != null" >
        forward_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eventId != null" >
        #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="eventType != null" >
        #{eventType,jdbcType=INTEGER},
      </if>
      <if test="workId != null" >
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="forwardContent != null" >
        #{forwardContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.bobo.silence.bean.Event" >
    update event
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="eventType != null" >
        event_type = #{eventType,jdbcType=INTEGER},
      </if>
      <if test="workId != null" >
        work_id = #{workId,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="forwardContent != null" >
        forward_content = #{forwardContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where event_id = #{eventId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.bobo.silence.bean.Event" >
    update event
    set user_id = #{userId,jdbcType=VARCHAR},
      event_type = #{eventType,jdbcType=INTEGER},
      work_id = #{workId,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      forward_content = #{forwardContent,jdbcType=LONGVARCHAR}
    where event_id = #{eventId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.bobo.silence.bean.Event" >
    update event
    set user_id = #{userId,jdbcType=VARCHAR},
      event_type = #{eventType,jdbcType=INTEGER},
      work_id = #{workId,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where event_id = #{eventId,jdbcType=VARCHAR}
  </update>
</mapper>