<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.bobo.silence.mapper.HistoryMapper" >
  <resultMap id="BaseResultMap" type="org.bobo.silence.bean.History" >
    <id column="history_id" property="historyId" jdbcType="VARCHAR" />
    <result column="work_id" property="workId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="operate" property="operate" jdbcType="INTEGER" />
    <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    history_id, work_id, user_id, operate, delete_flag, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from history
    where history_id = #{historyId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from history
    where history_id = #{historyId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.bobo.silence.bean.History" >
    insert into history (history_id, work_id, user_id, 
      operate, delete_flag, create_time, 
      update_time)
    values (#{historyId,jdbcType=VARCHAR}, #{workId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{operate,jdbcType=INTEGER}, #{deleteFlag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.bobo.silence.bean.History" >
    insert into history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="historyId != null" >
        history_id,
      </if>
      <if test="workId != null" >
        work_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="operate != null" >
        operate,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="historyId != null" >
        #{historyId,jdbcType=VARCHAR},
      </if>
      <if test="workId != null" >
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="operate != null" >
        #{operate,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.bobo.silence.bean.History" >
    update history
    <set >
      <if test="workId != null" >
        work_id = #{workId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="operate != null" >
        operate = #{operate,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where history_id = #{historyId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.bobo.silence.bean.History" >
    update history
    set work_id = #{workId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      operate = #{operate,jdbcType=INTEGER},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where history_id = #{historyId,jdbcType=VARCHAR}
  </update>
</mapper>