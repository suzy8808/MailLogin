<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.bobo.silence.mapper.UserWorkRlsMapper" >
  <resultMap id="BaseResultMap" type="org.bobo.silence.bean.UserWorkRls" >
    <id column="uw_rls_id" property="uwRlsId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="work_id" property="workId" jdbcType="VARCHAR" />
    <result column="like" property="like" jdbcType="INTEGER" />
    <result column="coin" property="coin" jdbcType="INTEGER" />
    <result column="dislike" property="dislike" jdbcType="INTEGER" />
    <result column="forward" property="forward" jdbcType="INTEGER" />
    <result column="collect" property="collect" jdbcType="INTEGER" />
    <result column="report" property="report" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    uw_rls_id, user_id, work_id, like, coin, dislike, forward, collect, report, comment, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_work_rls
    where uw_rls_id = #{uwRlsId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_work_rls
    where uw_rls_id = #{uwRlsId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.bobo.silence.bean.UserWorkRls" >
    insert into user_work_rls (uw_rls_id, user_id, work_id, 
      like, coin, dislike, 
      forward, collect, report, 
      comment, create_time, update_time
      )
    values (#{uwRlsId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{workId,jdbcType=VARCHAR}, 
      #{like,jdbcType=INTEGER}, #{coin,jdbcType=INTEGER}, #{dislike,jdbcType=INTEGER}, 
      #{forward,jdbcType=INTEGER}, #{collect,jdbcType=INTEGER}, #{report,jdbcType=INTEGER}, 
      #{comment,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.bobo.silence.bean.UserWorkRls" >
    insert into user_work_rls
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uwRlsId != null" >
        uw_rls_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="workId != null" >
        work_id,
      </if>
      <if test="like != null" >
        like,
      </if>
      <if test="coin != null" >
        coin,
      </if>
      <if test="dislike != null" >
        dislike,
      </if>
      <if test="forward != null" >
        forward,
      </if>
      <if test="collect != null" >
        collect,
      </if>
      <if test="report != null" >
        report,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uwRlsId != null" >
        #{uwRlsId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="workId != null" >
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="like != null" >
        #{like,jdbcType=INTEGER},
      </if>
      <if test="coin != null" >
        #{coin,jdbcType=INTEGER},
      </if>
      <if test="dislike != null" >
        #{dislike,jdbcType=INTEGER},
      </if>
      <if test="forward != null" >
        #{forward,jdbcType=INTEGER},
      </if>
      <if test="collect != null" >
        #{collect,jdbcType=INTEGER},
      </if>
      <if test="report != null" >
        #{report,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.bobo.silence.bean.UserWorkRls" >
    update user_work_rls
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="workId != null" >
        work_id = #{workId,jdbcType=VARCHAR},
      </if>
      <if test="like != null" >
        like = #{like,jdbcType=INTEGER},
      </if>
      <if test="coin != null" >
        coin = #{coin,jdbcType=INTEGER},
      </if>
      <if test="dislike != null" >
        dislike = #{dislike,jdbcType=INTEGER},
      </if>
      <if test="forward != null" >
        forward = #{forward,jdbcType=INTEGER},
      </if>
      <if test="collect != null" >
        collect = #{collect,jdbcType=INTEGER},
      </if>
      <if test="report != null" >
        report = #{report,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where uw_rls_id = #{uwRlsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.bobo.silence.bean.UserWorkRls" >
    update user_work_rls
    set user_id = #{userId,jdbcType=VARCHAR},
      work_id = #{workId,jdbcType=VARCHAR},
      like = #{like,jdbcType=INTEGER},
      coin = #{coin,jdbcType=INTEGER},
      dislike = #{dislike,jdbcType=INTEGER},
      forward = #{forward,jdbcType=INTEGER},
      collect = #{collect,jdbcType=INTEGER},
      report = #{report,jdbcType=INTEGER},
      comment = #{comment,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where uw_rls_id = #{uwRlsId,jdbcType=VARCHAR}
  </update>
</mapper>